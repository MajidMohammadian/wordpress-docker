version: "3.8"

networks:
  wordpress_network:
    driver: bridge

services:
  app:
    container_name: ${PROJECT_NAME}-app
    build:
      context: ./code
    image: wordpress:latest
    environment:
      - APP_DEBUG=false
      - DATABASE_HOST=${PROJECT_NAME}_mysql_host
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      - mysql
    networks:
      - wordpress_network
    tty: true
    restart: unless-stopped

  server:
    container_name: ${PROJECT_NAME}-server
    image: nginx:stable-alpine
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/ssl/:/etc/nginx/ssl/
      - ./code:/var/www/app
    networks:
      - wordpress_network
    tty: true
    restart: unless-stopped

  mysql:
    container_name: ${PROJECT_NAME}-mysql
    image: mysql:latest
    hostname: ${PROJECT_NAME}_mysql_host
    environment:
      - MYSQL_ROOT_USERNAME=${MYSQL_ROOT_USERNAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
    ports:
      - ${MYSQL_PORT:-3306}:3306
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - wordpress_network
    tty: true
    restart: unless-stopped

  adminer:
    container_name: ${PROJECT_NAME}-adminer
    image: adminer
    depends_on:
      - mysql
    ports:
      - ${ADMINER_PORT:-8080}:8080
    networks:
      - wordpress_network
    links:
      - mysql
    tty: true
    restart: unless-stopped

volumes:
  mysql:
    driver: local
    name: ${PROJECT_NAME}_mysql